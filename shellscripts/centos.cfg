# kick start

text

# Use HTTP installation method.
url --url http://192.168.1.58/repo

lang en_US.UTF-8

keyboard us

%include /tmp/network.ks

reboot
#network --onboot yes --device eth0 --bootproto dhcp --noipv6 --hostname=nerima-rhel6-2xx.example.com

rootpw  --iscrypted $6$mp7D7KeMRUqPBxQl$dvpa/xeUq3nMla3MiXPH.tEZA3s0rs/D.QNTgsVnLwwHdXHz.7cbNubDuqqzsVG7k/TTq6xWzcQeEAGvhg2yz0

firewall --disabled

authconfig --enableshadow --passalgo=sha512

selinux --permissive

timezone --utc Asia/Tokyo

bootloader --location=mbr --driveorder=vda --append="crashkernel=auto rhgb quiet"

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

clearpart --linux --drives=vda
zerombr

part /boot --fstype=ext4 --size=500
part pv.1 --grow --size=1
volgroup vg_centos --pesize=4096 pv.1
logvol / --fstype=ext4 --name=lv_root --vgname=vg_centos --grow --size=1024 --maxsize=51200
logvol swap --name=lv_swap --vgname=vg_centos --grow --size=1000 --maxsize=1024


##### package #####
%packages
@base
@core
screen
wget
nfs-utils
%end

#### pre #####

%pre
#!/bin/sh
for x in `cat /proc/cmdline`; do
        case $x in SERVERNAME*)
	        eval $x
		echo "network --device eth0 --bootproto dhcp --hostname mkdata-${SERVERNAME}.example.com" > /tmp/network.ks
                ;;
	        esac;
	done
%end




%post --interpreter=/bin/bash 


ip=`/sbin/ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $1}' | cut -c11-12`


host=`/bin/cat /etc/sysconfig/network | grep mkdata | cut -c10-40`

ip_addr=` /sbin/ifconfig eth0 | grep 'inet ' | cut -d: -f2 | awk '{ print $1}'`

echo "#########################################" >> /etc/hosts

echo "$ip_addr  $host" >> /etc/hosts

echo "#########################################" >> /etc/sysconfig/network-scripts/ifcfg-eth0

echo "IPADDR=$ip_addr" >> /etc/sysconfig/network-scripts/ifcfg-eth0

echo "NETMASK=255.255.255.0" >> /etc/sysconfig/network-scripts/ifcfg-eth0

echo "GATEWAY=192.168.1.1" >> /etc/sysconfig/network

/bin/sed -i -e "s/dhcp/static/g" /etc/sysconfig/network-scripts/ifcfg-eth0

/bin/sed -i -e '/NM_CONTROLLED/d' /etc/sysconfig/network-scripts/ifcfg-eth0

echo "NM_CONTROLLED=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0

echo "DNS2=8.8.8.8"  >> /etc/sysconfig/network-scripts/ifcfg-eth0

echo "nameserver 8.8.8.8" >> /etc/resolv.conf

/bin/cp /etc/rc.d/rc.local /etc/rc.d/rc.localold

echo "mount -t nfs 192.168.1.58:/key  /mnt" >> /etc/rc.d/rc.local

echo "chmod u+x /mnt/create.sh" >> /etc/rc.d/rc.local

echo "/bin/bash /mnt/create.sh" >> /etc/rc.d/rc.local


# Remote User Add
groupadd -g 1000 mkuser
useradd -u 1000 -g 1000 -d /home/mkuser -s /bin/bash mkuser
echo redhat | passwd --stdin mkuser


mkdir /home/mkuser/.ssh
chmod 700 /home/mkuser/.ssh
chown mkuser:mkuser /home/mkuser/.ssh

#
mkdir /root/.ssh
chmod 700 /root/.ssh
ssh-keygen -f /root/.ssh/mkuser.rsa  -t rsa -N '' -C ""
cat /root/.ssh/mkuser.rsa.pub > /home/mkuser/.ssh/authorized_keys
chown mkuser:mkuser /home/mkuser/.ssh/authorized_keys
chmod 600 /home/mkuser/.ssh/authorized_keys
host=`/bin/cat /etc/sysconfig/network | grep mkdata | cut -c10-40`
openssl rsa -in /root/.ssh/mkuser.rsa -outform pem > /root/$host.pem


echo "/bin/cp -f /mnt/motd /etc/ " >> /etc/rc.d/rc.local
echo "/bin/cp -f /mnt/issue.net /etc/ " >> /etc/rc.d/rc.local
echo "/bin/mv /root/*.pem /mnt/" >> /etc/rc.d/rc.local
echo "umount /mnt"              >> /etc/rc.d/rc.local
echo "/bin/mv  /etc/rc.d/rc.localold /etc/rc.d/rc.local" >> /etc/rc.d/rc.local

#create sudo file. added by kim 

touch /etc/sudoers.d/mkuser
echo "mkuser  ALL=(ALL)      NOPASSWD:ALL" > /etc/sudoers.d/mkuser
chmod 440 /etc/sudoers.d/mkuser

# can not login root

sed 's/#\?\(PermitRootLogin\s*\).*$/\1 no/' /etc/ssh/sshd_config > temp.txt 
sed 's/#\?\(Banner\s*\).*$/\1 \/etc\/issue.net/' temp.txt > temp1.txt
mv -f temp1.txt temp.txt
mv -f temp.txt /etc/ssh/sshd_config


%end

